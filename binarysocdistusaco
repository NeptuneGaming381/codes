# include <iostream>
# include <bits/stdc++.h>
# include <cmath>
using namespace std;
int main()
{
	//(void)!freopen("socdist.in", "r", stdin);
	//(void)!freopen("socdist.out","w",stdout); 
	long long cows;
	long long lg;
	cin >> cows >> lg;
	vector<pair <long long , long long> > rgs;
	long long a;
	long long b;
	for (long long i=0;i<=lg-1;i++)
	{
		cin >> a >> b;
		rgs.push_back({a,b});
	}
	sort(rgs.begin(),rgs.end());
	long long l=0;
	long long r=pow(10,18);
	long long ans=0;
	while (l<=r)
	{
		long long mid  = l+((r-l)/2);
		// keep the cows with gap mid
		// start from rgs, and keep placing at those gap
		long long cowplaced=1;
		vector<pair <long long , long long> >::iterator lol;
		lol=rgs.begin();
		long long prev=lol->first;
		for (lol=rgs.begin();lol<rgs.end();lol++)
		{
			long long j=lol->first;
			while (j<=lol->second)
			{
				if (j>=prev+mid)
				{
					cowplaced++;	
					prev=j;
					j=j+mid;
				}
				else
				{
					j=prev+mid;
				}
			}
			//cout << mid << " " << cowplaced << endl;
		}
		if (cowplaced>=cows)
		{
			ans=mid;
			l=mid+1;
		}
		else
		{
			r=mid-1;
		}
	}
	if (cows==0)
	{
		cout << 0 << endl;
	}
	else
	{
		cout << ans << endl;
	}
}

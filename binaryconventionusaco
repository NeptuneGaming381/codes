# include <iostream>
# include <bits/stdc++.h>
# include <cmath>
using namespace std;
int main()
{
	freopen("convention.in", "r", stdin);
	freopen("convention.out","w",stdout); 
	long long cows;
	long long busav;
	long long mperbus;
	cin >> cows >> busav >> mperbus;
	long long arr[cows];
	for (long long i=0;i<=cows-1;i++)
	{
		cin >> arr[i];
	}
	sort(arr,arr+cows);
	long long l=1;
	long long r=arr[cows-1];
	long long ans=0;
	while (l<=r)
	{
		long long mid=l+((r-l)/2);
		// each bus leaves and either mperbus can come, or cows till mid can come
		long long curr=0;
		long long cowtake=0;
		long long temp=0;
		long long buses=0;
		// keep taking either n cows or as many cows till arr[element]<mid
		while (curr<=cows-1)
		{
		if (arr[std::min(curr+mperbus-1,cows-1)]<=arr[curr]+mid)
			{
				// this means all mperbus elements can be taken
				curr=curr+mperbus;
				cowtake=cowtake+mperbus;
				buses++;
			}
			else
			{
				long long tp=curr;
				while (arr[tp]<=arr[curr]+mid)
				{
					tp++;
					cowtake++;
				}
				curr=tp;
				buses++;
			}
			
		}
		//cout << mid << " " << cowtake << endl;
		if (buses<=busav)
		{
			r=mid-1;
			ans=mid;
		}
		else
		{
			l=mid+1;
		}
	}
	cout << ans << endl;
}
